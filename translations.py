from database import requests as rq

translations = {
    '<b>CryptoStats:</b> –ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ —Ü–µ–Ω, –ø–æ–ª—É—á–∞–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∫—Ä–∏–ø—Ç—ã –ø—Ä—è–º–æ –≤ Telegram.': '<b>CryptoStats:</b> Stay up to date with prices, get statistics, charts and crypto calculator directly in Telegram.',
    '/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n/help –ü–æ–º–æ—â—å\n\nhttps://t.me/AntonBog123': '/start - Start the bot\n/settings - Settings\n/help Help\n\nhttps://t.me/AntonBog123',
    '‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>': '‚öôÔ∏è <b>Settings</b>',
    'üè¶ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞': 'üè¶ Statistics',
    'üëë –ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª': 'üëë Premium Functionality',
    'üìï –û —Å–µ—Ä–≤–∏—Å–µ': 'üìï About the Service',
    'üíº –ü—Ä–æ—Ñ–∏–ª—å': 'üíº Profile',
    '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é': 'Select menu item',
    
    '<b>–õ–æ–≥–∏–Ω:</b> {}\n<b>–°—Ç–∞—Ç—É—Å:</b> {}\n<b>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</b> {}': '<b>Login:</b> {}\n<b>Status:</b> {}\n<b>Registered:</b> {}',
    
    '–°—Ç–∞–Ω–¥–∞—Ä—Ç': 'Standard',
    '–ü—Ä–µ–º–∏—É–º': 'Premium',   
    
    
    
    '‚è≥ –û–±–Ω–æ–≤–∏—Ç—å': '‚è≥ Refresh',
    'üìà –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è': 'üìà Full information',
    '‚å®Ô∏è –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã': '‚å®Ô∏è Cryptocurrency calculator',
    '‚Çø –°–ø–∏—Å–æ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç': '‚Çø List of cryptocurrencies',
    
    '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.': 'Enter the name of the cryptocurrency.',
    '<b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏ –µ—ë –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ\n—á–µ—Ä–µ–∑ —Å–∏–º–≤–æ–ª "-"</b>\n–ù–∞–ø—Ä–∏–º–µ—Ä - "BNB-3.54".': '<b>Enter the name of the cryptocurrency and its quantity\nseparated by the "-" symbol</b>\nFor example - "BNB-3.54".',
    '<b>–ì—Ä–∞—Ñ–∏–∫ –∑–∞ 24 —á–∞—Å–∞</b>': '<b>24 hour chart</b>',
    '<b>–ì—Ä–∞—Ñ–∏–∫ –∑–∞ 7 –¥–Ω–µ–π</b>': '<b>Chart for 7 days</b>',
    '<b>–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä–∞—Ñ–∏–∫.</b>': '<b>Select schedule.</b>',
    'üìà –ì—Ä–∞—Ñ–∏–∫(24)': 'üìà Chart(24)',
    'üìâ –ì—Ä–∞—Ñ–∏–∫(7)': 'üìâ Graph(7)',
    '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥!': 'Invalid data, please re-enter!',
    '<b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:</b>\n\n<b>–ù–∞–∑–≤–∞–Ω–∏–µ: </b>{}\n<b>–ú–∞—Ä–∫–µ—Ç: </b>{}\n<b>–¶–µ–Ω–∞: </b>{}$\n<b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 1—á: </b>{}%\n<b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á: </b>{}%\n<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞ 24—á: </b>{}$\n<b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞ 24—á: </b>{}$': '<b>Cryptocurrency image:</b>\n\n<b>Name: </b>{}\n<b>Market: </b>{}\n<b>Price: </b> {}$\n<b>Change in 1 hour: </b>{}%\n<b>Change in 24 hours: </b>{}%\n<b>Maximum price in 24 hours: </b>{}$\n<b>Minimum price for 24 hours: </b>{}$',
    '‚å®Ô∏è <b>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</b>\n\n–¶–µ–Ω–∞ {}: {} = {}$': '‚å®Ô∏è <b>Calculator</b>\n\nPrice {}: {} = {}$',
    
    '‚úèÔ∏è –ü–æ–≤—Ç–æ—Ä–∏—Ç—å': '‚úèÔ∏è Repeat',
    'üëà –ù–∞–∑–∞–¥': 'üëà Back',
    
    'üëë <b>–ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª</b>': 'üëë <b>Premium functionality</b>',
    '–ü—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –ø—Ä–µ–º–∏—É–º –¥–æ—Å—Ç—É–ø —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º': 'Purchase premium access to use this functionality',
    
    '–í—ã —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å.': 'You have already purchased premium status.',
    '–ü—Ä–µ–º–∏—É–º –∫—É–ø–ª–µ–Ω!': 'Premium purchased!',
    
    'üìâ –ì—Ä–∞—Ñ–∏–∫–∏': 'üìâ Charts',
    'üì∞ –ù–æ–≤–æ—Å—Ç–∏': 'üì∞ News',
    'üìò –û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã': 'üìò Educational materials',
    
    
    'üëë –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–µ–º–∏—É–º': 'üëë Purchase premium',
    '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏': '‚öôÔ∏è Settings',
    'üìå –ü–æ–º–æ—â—å': 'üìå Help',
    
    '<b>–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫</b>': '<b>Select language</b>',
    '<b>–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.</b>': '<b>English language is set.</b>',
    'üòõ –Ø–∑—ã–∫': 'üòõ Language',
}

def _(text, lang='ru'):
    if lang == 'ru':
        return text
    else:
        return translations[text]

async def get_lang(tg_id):
    return await rq.get_localization(tg_id)       